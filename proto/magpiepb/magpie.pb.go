// Code generated by protoc-gen-go. DO NOT EDIT.
// source: magpie.proto

package magpiepb

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type DataType int32

const (
	DataType_STRING     DataType = 0
	DataType_INT        DataType = 1
	DataType_BOOL       DataType = 2
	DataType_MAP        DataType = 3
	DataType_STRING_ARR DataType = 4
	DataType_INT_ARR    DataType = 5
	DataType_MAP_ARR    DataType = 6
)

var DataType_name = map[int32]string{
	0: "STRING",
	1: "INT",
	2: "BOOL",
	3: "MAP",
	4: "STRING_ARR",
	5: "INT_ARR",
	6: "MAP_ARR",
}

var DataType_value = map[string]int32{
	"STRING":     0,
	"INT":        1,
	"BOOL":       2,
	"MAP":        3,
	"STRING_ARR": 4,
	"INT_ARR":    5,
	"MAP_ARR":    6,
}

func (x DataType) String() string {
	return proto.EnumName(DataType_name, int32(x))
}

func (DataType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_f97d22a07cda9df9, []int{0}
}

type QueryType int32

const (
	QueryType_INSERT QueryType = 0
	QueryType_DELETE QueryType = 1
	QueryType_UPDATE QueryType = 2
	QueryType_SELECT QueryType = 3
)

var QueryType_name = map[int32]string{
	0: "INSERT",
	1: "DELETE",
	2: "UPDATE",
	3: "SELECT",
}

var QueryType_value = map[string]int32{
	"INSERT": 0,
	"DELETE": 1,
	"UPDATE": 2,
	"SELECT": 3,
}

func (x QueryType) String() string {
	return proto.EnumName(QueryType_name, int32(x))
}

func (QueryType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_f97d22a07cda9df9, []int{1}
}

//stream请求结构
type StreamRequest struct {
	Data                 string   `protobuf:"bytes,1,opt,name=data,proto3" json:"data,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *StreamRequest) Reset()         { *m = StreamRequest{} }
func (m *StreamRequest) String() string { return proto.CompactTextString(m) }
func (*StreamRequest) ProtoMessage()    {}
func (*StreamRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_f97d22a07cda9df9, []int{0}
}

func (m *StreamRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_StreamRequest.Unmarshal(m, b)
}
func (m *StreamRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_StreamRequest.Marshal(b, m, deterministic)
}
func (m *StreamRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_StreamRequest.Merge(m, src)
}
func (m *StreamRequest) XXX_Size() int {
	return xxx_messageInfo_StreamRequest.Size(m)
}
func (m *StreamRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_StreamRequest.DiscardUnknown(m)
}

var xxx_messageInfo_StreamRequest proto.InternalMessageInfo

func (m *StreamRequest) GetData() string {
	if m != nil {
		return m.Data
	}
	return ""
}

type LoadResponse struct {
	Code                 int32    `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Name                 string   `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	StartTime            string   `protobuf:"bytes,3,opt,name=start_time,json=startTime,proto3" json:"start_time,omitempty"`
	EndTime              string   `protobuf:"bytes,4,opt,name=end_time,json=endTime,proto3" json:"end_time,omitempty"`
	ElapsedTime          int64    `protobuf:"varint,5,opt,name=elapsed_time,json=elapsedTime,proto3" json:"elapsed_time,omitempty"`
	RecordCount          int64    `protobuf:"varint,6,opt,name=record_count,json=recordCount,proto3" json:"record_count,omitempty"`
	Message              string   `protobuf:"bytes,7,opt,name=message,proto3" json:"message,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *LoadResponse) Reset()         { *m = LoadResponse{} }
func (m *LoadResponse) String() string { return proto.CompactTextString(m) }
func (*LoadResponse) ProtoMessage()    {}
func (*LoadResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_f97d22a07cda9df9, []int{1}
}

func (m *LoadResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_LoadResponse.Unmarshal(m, b)
}
func (m *LoadResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_LoadResponse.Marshal(b, m, deterministic)
}
func (m *LoadResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_LoadResponse.Merge(m, src)
}
func (m *LoadResponse) XXX_Size() int {
	return xxx_messageInfo_LoadResponse.Size(m)
}
func (m *LoadResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_LoadResponse.DiscardUnknown(m)
}

var xxx_messageInfo_LoadResponse proto.InternalMessageInfo

func (m *LoadResponse) GetCode() int32 {
	if m != nil {
		return m.Code
	}
	return 0
}

func (m *LoadResponse) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *LoadResponse) GetStartTime() string {
	if m != nil {
		return m.StartTime
	}
	return ""
}

func (m *LoadResponse) GetEndTime() string {
	if m != nil {
		return m.EndTime
	}
	return ""
}

func (m *LoadResponse) GetElapsedTime() int64 {
	if m != nil {
		return m.ElapsedTime
	}
	return 0
}

func (m *LoadResponse) GetRecordCount() int64 {
	if m != nil {
		return m.RecordCount
	}
	return 0
}

func (m *LoadResponse) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

type QueryRequest struct {
	QueryType            QueryType `protobuf:"varint,1,opt,name=QueryType,proto3,enum=QueryType" json:"QueryType,omitempty"`
	Sql                  string    `protobuf:"bytes,2,opt,name=sql,proto3" json:"sql,omitempty"`
	XXX_NoUnkeyedLiteral struct{}  `json:"-"`
	XXX_unrecognized     []byte    `json:"-"`
	XXX_sizecache        int32     `json:"-"`
}

func (m *QueryRequest) Reset()         { *m = QueryRequest{} }
func (m *QueryRequest) String() string { return proto.CompactTextString(m) }
func (*QueryRequest) ProtoMessage()    {}
func (*QueryRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_f97d22a07cda9df9, []int{2}
}

func (m *QueryRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_QueryRequest.Unmarshal(m, b)
}
func (m *QueryRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_QueryRequest.Marshal(b, m, deterministic)
}
func (m *QueryRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_QueryRequest.Merge(m, src)
}
func (m *QueryRequest) XXX_Size() int {
	return xxx_messageInfo_QueryRequest.Size(m)
}
func (m *QueryRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_QueryRequest.DiscardUnknown(m)
}

var xxx_messageInfo_QueryRequest proto.InternalMessageInfo

func (m *QueryRequest) GetQueryType() QueryType {
	if m != nil {
		return m.QueryType
	}
	return QueryType_INSERT
}

func (m *QueryRequest) GetSql() string {
	if m != nil {
		return m.Sql
	}
	return ""
}

type QueryResponse struct {
	Code                 int32    `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Message              string   `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	Data                 string   `protobuf:"bytes,3,opt,name=data,proto3" json:"data,omitempty"`
	DataType             DataType `protobuf:"varint,4,opt,name=DataType,proto3,enum=DataType" json:"DataType,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *QueryResponse) Reset()         { *m = QueryResponse{} }
func (m *QueryResponse) String() string { return proto.CompactTextString(m) }
func (*QueryResponse) ProtoMessage()    {}
func (*QueryResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_f97d22a07cda9df9, []int{3}
}

func (m *QueryResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_QueryResponse.Unmarshal(m, b)
}
func (m *QueryResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_QueryResponse.Marshal(b, m, deterministic)
}
func (m *QueryResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_QueryResponse.Merge(m, src)
}
func (m *QueryResponse) XXX_Size() int {
	return xxx_messageInfo_QueryResponse.Size(m)
}
func (m *QueryResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_QueryResponse.DiscardUnknown(m)
}

var xxx_messageInfo_QueryResponse proto.InternalMessageInfo

func (m *QueryResponse) GetCode() int32 {
	if m != nil {
		return m.Code
	}
	return 0
}

func (m *QueryResponse) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

func (m *QueryResponse) GetData() string {
	if m != nil {
		return m.Data
	}
	return ""
}

func (m *QueryResponse) GetDataType() DataType {
	if m != nil {
		return m.DataType
	}
	return DataType_STRING
}

type Member struct {
	Id                   string   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Address              string   `protobuf:"bytes,2,opt,name=address,proto3" json:"address,omitempty"`
	Port                 int32    `protobuf:"varint,3,opt,name=port,proto3" json:"port,omitempty"`
	Team                 string   `protobuf:"bytes,4,opt,name=team,proto3" json:"team,omitempty"`
	StartUpTime          int64    `protobuf:"varint,5,opt,name=start_up_time,json=startUpTime,proto3" json:"start_up_time,omitempty"`
	LeaderFlag           bool     `protobuf:"varint,6,opt,name=leader_flag,json=leaderFlag,proto3" json:"leader_flag,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Member) Reset()         { *m = Member{} }
func (m *Member) String() string { return proto.CompactTextString(m) }
func (*Member) ProtoMessage()    {}
func (*Member) Descriptor() ([]byte, []int) {
	return fileDescriptor_f97d22a07cda9df9, []int{4}
}

func (m *Member) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Member.Unmarshal(m, b)
}
func (m *Member) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Member.Marshal(b, m, deterministic)
}
func (m *Member) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Member.Merge(m, src)
}
func (m *Member) XXX_Size() int {
	return xxx_messageInfo_Member.Size(m)
}
func (m *Member) XXX_DiscardUnknown() {
	xxx_messageInfo_Member.DiscardUnknown(m)
}

var xxx_messageInfo_Member proto.InternalMessageInfo

func (m *Member) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *Member) GetAddress() string {
	if m != nil {
		return m.Address
	}
	return ""
}

func (m *Member) GetPort() int32 {
	if m != nil {
		return m.Port
	}
	return 0
}

func (m *Member) GetTeam() string {
	if m != nil {
		return m.Team
	}
	return ""
}

func (m *Member) GetStartUpTime() int64 {
	if m != nil {
		return m.StartUpTime
	}
	return 0
}

func (m *Member) GetLeaderFlag() bool {
	if m != nil {
		return m.LeaderFlag
	}
	return false
}

type MembersResponse struct {
	Members              []*Member `protobuf:"bytes,1,rep,name=Members,proto3" json:"Members,omitempty"`
	XXX_NoUnkeyedLiteral struct{}  `json:"-"`
	XXX_unrecognized     []byte    `json:"-"`
	XXX_sizecache        int32     `json:"-"`
}

func (m *MembersResponse) Reset()         { *m = MembersResponse{} }
func (m *MembersResponse) String() string { return proto.CompactTextString(m) }
func (*MembersResponse) ProtoMessage()    {}
func (*MembersResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_f97d22a07cda9df9, []int{5}
}

func (m *MembersResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MembersResponse.Unmarshal(m, b)
}
func (m *MembersResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MembersResponse.Marshal(b, m, deterministic)
}
func (m *MembersResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MembersResponse.Merge(m, src)
}
func (m *MembersResponse) XXX_Size() int {
	return xxx_messageInfo_MembersResponse.Size(m)
}
func (m *MembersResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MembersResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MembersResponse proto.InternalMessageInfo

func (m *MembersResponse) GetMembers() []*Member {
	if m != nil {
		return m.Members
	}
	return nil
}

func init() {
	proto.RegisterEnum("DataType", DataType_name, DataType_value)
	proto.RegisterEnum("QueryType", QueryType_name, QueryType_value)
	proto.RegisterType((*StreamRequest)(nil), "StreamRequest")
	proto.RegisterType((*LoadResponse)(nil), "LoadResponse")
	proto.RegisterType((*QueryRequest)(nil), "QueryRequest")
	proto.RegisterType((*QueryResponse)(nil), "QueryResponse")
	proto.RegisterType((*Member)(nil), "Member")
	proto.RegisterType((*MembersResponse)(nil), "MembersResponse")
}

func init() { proto.RegisterFile("magpie.proto", fileDescriptor_f97d22a07cda9df9) }

var fileDescriptor_f97d22a07cda9df9 = []byte{
	// 558 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x7c, 0x53, 0xcb, 0x6e, 0xda, 0x40,
	0x14, 0xc5, 0x0f, 0x30, 0x5c, 0x1e, 0xb5, 0x66, 0xe5, 0x46, 0xaa, 0x9a, 0xb8, 0xaa, 0x44, 0xa3,
	0xca, 0x95, 0x68, 0x77, 0x5d, 0x91, 0xe0, 0x56, 0x54, 0x40, 0xe8, 0xe0, 0x6c, 0xaa, 0x4a, 0x68,
	0x60, 0x6e, 0x11, 0x12, 0xc6, 0x8e, 0x67, 0x90, 0x92, 0x8f, 0xe8, 0x37, 0xf4, 0x97, 0xfa, 0x49,
	0xd5, 0xcc, 0x98, 0x57, 0x16, 0xdd, 0x9d, 0x7b, 0xce, 0xf5, 0xdc, 0xc7, 0xf1, 0x85, 0x56, 0xca,
	0x56, 0xf9, 0x1a, 0xa3, 0xbc, 0xc8, 0x64, 0x16, 0xbe, 0x81, 0xf6, 0x4c, 0x16, 0xc8, 0x52, 0x8a,
	0x0f, 0x3b, 0x14, 0x92, 0x10, 0x70, 0x39, 0x93, 0x2c, 0xb0, 0x2e, 0xad, 0x6e, 0x83, 0x6a, 0x1c,
	0xfe, 0xb5, 0xa0, 0x35, 0xca, 0x18, 0xa7, 0x28, 0xf2, 0x6c, 0x2b, 0x50, 0x25, 0x2d, 0x33, 0x8e,
	0x3a, 0xa9, 0x4a, 0x35, 0x56, 0xdc, 0x96, 0xa5, 0x18, 0xd8, 0xe6, 0x43, 0x85, 0xc9, 0x2b, 0x00,
	0x21, 0x59, 0x21, 0xe7, 0x72, 0x9d, 0x62, 0xe0, 0x68, 0xa5, 0xa1, 0x99, 0x64, 0x9d, 0x22, 0x79,
	0x09, 0x75, 0xdc, 0x72, 0x23, 0xba, 0x5a, 0xf4, 0x70, 0xcb, 0xb5, 0x74, 0x05, 0x2d, 0xdc, 0xb0,
	0x5c, 0x60, 0x29, 0x57, 0x2f, 0xad, 0xae, 0x43, 0x9b, 0x25, 0xb7, 0x4f, 0x29, 0x70, 0x99, 0x15,
	0x7c, 0xbe, 0xcc, 0x76, 0x5b, 0x19, 0xd4, 0x4c, 0x8a, 0xe1, 0x6e, 0x15, 0x45, 0x02, 0xf0, 0x52,
	0x14, 0x82, 0xad, 0x30, 0xf0, 0xcc, 0xfb, 0x65, 0x18, 0x7e, 0x83, 0xd6, 0xf7, 0x1d, 0x16, 0x4f,
	0xfb, 0xb1, 0xbb, 0xd0, 0xd0, 0x71, 0xf2, 0x94, 0x9b, 0xb1, 0x3a, 0x3d, 0x88, 0x0e, 0x0c, 0x3d,
	0x8a, 0xc4, 0x07, 0x47, 0x3c, 0x6c, 0xca, 0x31, 0x15, 0x0c, 0x1f, 0xa1, 0x5d, 0xbe, 0xf5, 0x9f,
	0xf5, 0x9c, 0xb4, 0x62, 0x9f, 0xb5, 0x72, 0xd8, 0xb8, 0x73, 0xdc, 0x38, 0x79, 0x0b, 0xf5, 0x01,
	0x93, 0x4c, 0x77, 0xe3, 0xea, 0x6e, 0x1a, 0xd1, 0x9e, 0xa0, 0x07, 0x29, 0xfc, 0x63, 0x41, 0x6d,
	0x8c, 0xe9, 0x02, 0x0b, 0xd2, 0x01, 0x7b, 0xcd, 0x4b, 0xd7, 0xec, 0x35, 0x57, 0xf5, 0x18, 0xe7,
	0x05, 0x0a, 0xb1, 0xaf, 0x57, 0x86, 0xaa, 0x5e, 0x9e, 0x15, 0x52, 0xd7, 0xab, 0x52, 0x8d, 0x15,
	0x27, 0x91, 0xa5, 0xa5, 0x0b, 0x1a, 0x93, 0x10, 0xda, 0xc6, 0xbc, 0x5d, 0x7e, 0xe6, 0x81, 0x26,
	0xef, 0x73, 0xed, 0xc1, 0x6b, 0x68, 0x6e, 0x90, 0x71, 0x2c, 0xe6, 0xbf, 0x36, 0x6c, 0xa5, 0x2d,
	0xa8, 0x53, 0x30, 0xd4, 0x97, 0x0d, 0x5b, 0x85, 0x9f, 0xe0, 0x85, 0x69, 0x50, 0x1c, 0xb6, 0x73,
	0x05, 0x5e, 0x49, 0x05, 0xd6, 0xa5, 0xd3, 0x6d, 0xf6, 0xbc, 0xc8, 0xc4, 0x74, 0xcf, 0x5f, 0xff,
	0x3c, 0x8e, 0x4f, 0x00, 0x6a, 0xb3, 0x84, 0x0e, 0x27, 0x5f, 0xfd, 0x0a, 0xf1, 0xc0, 0x19, 0x4e,
	0x12, 0xdf, 0x22, 0x75, 0x70, 0x6f, 0xee, 0xee, 0x46, 0xbe, 0xad, 0xa8, 0x71, 0x7f, 0xea, 0x3b,
	0xa4, 0x03, 0x60, 0xf2, 0xe6, 0x7d, 0x4a, 0x7d, 0x97, 0x34, 0xc1, 0x1b, 0x4e, 0x12, 0x1d, 0x54,
	0x55, 0x30, 0xee, 0x4f, 0x75, 0x50, 0xbb, 0xfe, 0x7c, 0xe2, 0xb5, 0x7a, 0x7e, 0x38, 0x99, 0xc5,
	0x34, 0xf1, 0x2b, 0x0a, 0x0f, 0xe2, 0x51, 0x9c, 0xc4, 0xbe, 0xa5, 0xf0, 0xfd, 0x74, 0xd0, 0x4f,
	0x62, 0xdf, 0xd6, 0x2d, 0xc4, 0xa3, 0xf8, 0x36, 0xf1, 0x9d, 0xde, 0x6f, 0xb5, 0x72, 0x7d, 0x41,
	0xe4, 0xfd, 0x61, 0x10, 0xd2, 0x8e, 0x4e, 0xff, 0xa6, 0x0b, 0x3f, 0x7a, 0x36, 0x74, 0x58, 0x21,
	0xef, 0xc0, 0x55, 0x37, 0x44, 0x3a, 0xd1, 0xd9, 0xc1, 0x5d, 0xb4, 0xa3, 0xd3, 0xd3, 0x0a, 0x2b,
	0x5d, 0x8b, 0x5c, 0x83, 0x17, 0x3f, 0xe2, 0x72, 0x27, 0xf1, 0xf9, 0xc3, 0x9d, 0xe8, 0xec, 0x4f,
	0x0b, 0x2b, 0x37, 0xcd, 0x1f, 0x8d, 0x0f, 0xe6, 0xa2, 0xf3, 0xc5, 0xa2, 0xa6, 0x8f, 0xfa, 0xe3,
	0xbf, 0x00, 0x00, 0x00, 0xff, 0xff, 0xe5, 0x13, 0xc6, 0xd4, 0xe4, 0x03, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// MagpieClient is the client API for Magpie service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type MagpieClient interface {
	Members(ctx context.Context, in *QueryRequest, opts ...grpc.CallOption) (*MembersResponse, error)
	Load(ctx context.Context, opts ...grpc.CallOption) (Magpie_LoadClient, error)
	Execute(ctx context.Context, in *QueryRequest, opts ...grpc.CallOption) (*QueryResponse, error)
}

type magpieClient struct {
	cc *grpc.ClientConn
}

func NewMagpieClient(cc *grpc.ClientConn) MagpieClient {
	return &magpieClient{cc}
}

func (c *magpieClient) Members(ctx context.Context, in *QueryRequest, opts ...grpc.CallOption) (*MembersResponse, error) {
	out := new(MembersResponse)
	err := c.cc.Invoke(ctx, "/Magpie/Members", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *magpieClient) Load(ctx context.Context, opts ...grpc.CallOption) (Magpie_LoadClient, error) {
	stream, err := c.cc.NewStream(ctx, &_Magpie_serviceDesc.Streams[0], "/Magpie/Load", opts...)
	if err != nil {
		return nil, err
	}
	x := &magpieLoadClient{stream}
	return x, nil
}

type Magpie_LoadClient interface {
	Send(*StreamRequest) error
	CloseAndRecv() (*LoadResponse, error)
	grpc.ClientStream
}

type magpieLoadClient struct {
	grpc.ClientStream
}

func (x *magpieLoadClient) Send(m *StreamRequest) error {
	return x.ClientStream.SendMsg(m)
}

func (x *magpieLoadClient) CloseAndRecv() (*LoadResponse, error) {
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	m := new(LoadResponse)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *magpieClient) Execute(ctx context.Context, in *QueryRequest, opts ...grpc.CallOption) (*QueryResponse, error) {
	out := new(QueryResponse)
	err := c.cc.Invoke(ctx, "/Magpie/Execute", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// MagpieServer is the server API for Magpie service.
type MagpieServer interface {
	Members(context.Context, *QueryRequest) (*MembersResponse, error)
	Load(Magpie_LoadServer) error
	Execute(context.Context, *QueryRequest) (*QueryResponse, error)
}

// UnimplementedMagpieServer can be embedded to have forward compatible implementations.
type UnimplementedMagpieServer struct {
}

func (*UnimplementedMagpieServer) Members(ctx context.Context, req *QueryRequest) (*MembersResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Members not implemented")
}
func (*UnimplementedMagpieServer) Load(srv Magpie_LoadServer) error {
	return status.Errorf(codes.Unimplemented, "method Load not implemented")
}
func (*UnimplementedMagpieServer) Execute(ctx context.Context, req *QueryRequest) (*QueryResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Execute not implemented")
}

func RegisterMagpieServer(s *grpc.Server, srv MagpieServer) {
	s.RegisterService(&_Magpie_serviceDesc, srv)
}

func _Magpie_Members_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(QueryRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MagpieServer).Members(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/Magpie/Members",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MagpieServer).Members(ctx, req.(*QueryRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Magpie_Load_Handler(srv interface{}, stream grpc.ServerStream) error {
	return srv.(MagpieServer).Load(&magpieLoadServer{stream})
}

type Magpie_LoadServer interface {
	SendAndClose(*LoadResponse) error
	Recv() (*StreamRequest, error)
	grpc.ServerStream
}

type magpieLoadServer struct {
	grpc.ServerStream
}

func (x *magpieLoadServer) SendAndClose(m *LoadResponse) error {
	return x.ServerStream.SendMsg(m)
}

func (x *magpieLoadServer) Recv() (*StreamRequest, error) {
	m := new(StreamRequest)
	if err := x.ServerStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func _Magpie_Execute_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(QueryRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MagpieServer).Execute(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/Magpie/Execute",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MagpieServer).Execute(ctx, req.(*QueryRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _Magpie_serviceDesc = grpc.ServiceDesc{
	ServiceName: "Magpie",
	HandlerType: (*MagpieServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Members",
			Handler:    _Magpie_Members_Handler,
		},
		{
			MethodName: "Execute",
			Handler:    _Magpie_Execute_Handler,
		},
	},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "Load",
			Handler:       _Magpie_Load_Handler,
			ClientStreams: true,
		},
	},
	Metadata: "magpie.proto",
}
