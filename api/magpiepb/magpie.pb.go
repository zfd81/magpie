// Code generated by protoc-gen-go. DO NOT EDIT.
// source: magpie.proto

package magpiepb

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type RpcRequest struct {
	Params               map[string]string `protobuf:"bytes,1,rep,name=params,proto3" json:"params,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	Data                 string            `protobuf:"bytes,2,opt,name=data,proto3" json:"data,omitempty"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *RpcRequest) Reset()         { *m = RpcRequest{} }
func (m *RpcRequest) String() string { return proto.CompactTextString(m) }
func (*RpcRequest) ProtoMessage()    {}
func (*RpcRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_f97d22a07cda9df9, []int{0}
}

func (m *RpcRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RpcRequest.Unmarshal(m, b)
}
func (m *RpcRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RpcRequest.Marshal(b, m, deterministic)
}
func (m *RpcRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RpcRequest.Merge(m, src)
}
func (m *RpcRequest) XXX_Size() int {
	return xxx_messageInfo_RpcRequest.Size(m)
}
func (m *RpcRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_RpcRequest.DiscardUnknown(m)
}

var xxx_messageInfo_RpcRequest proto.InternalMessageInfo

func (m *RpcRequest) GetParams() map[string]string {
	if m != nil {
		return m.Params
	}
	return nil
}

func (m *RpcRequest) GetData() string {
	if m != nil {
		return m.Data
	}
	return ""
}

//stream请求结构
type StreamRequest struct {
	Data                 string   `protobuf:"bytes,1,opt,name=data,proto3" json:"data,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *StreamRequest) Reset()         { *m = StreamRequest{} }
func (m *StreamRequest) String() string { return proto.CompactTextString(m) }
func (*StreamRequest) ProtoMessage()    {}
func (*StreamRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_f97d22a07cda9df9, []int{1}
}

func (m *StreamRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_StreamRequest.Unmarshal(m, b)
}
func (m *StreamRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_StreamRequest.Marshal(b, m, deterministic)
}
func (m *StreamRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_StreamRequest.Merge(m, src)
}
func (m *StreamRequest) XXX_Size() int {
	return xxx_messageInfo_StreamRequest.Size(m)
}
func (m *StreamRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_StreamRequest.DiscardUnknown(m)
}

var xxx_messageInfo_StreamRequest proto.InternalMessageInfo

func (m *StreamRequest) GetData() string {
	if m != nil {
		return m.Data
	}
	return ""
}

type RpcResponse struct {
	Code                 int32    `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Message              string   `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	Data                 string   `protobuf:"bytes,3,opt,name=data,proto3" json:"data,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RpcResponse) Reset()         { *m = RpcResponse{} }
func (m *RpcResponse) String() string { return proto.CompactTextString(m) }
func (*RpcResponse) ProtoMessage()    {}
func (*RpcResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_f97d22a07cda9df9, []int{2}
}

func (m *RpcResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RpcResponse.Unmarshal(m, b)
}
func (m *RpcResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RpcResponse.Marshal(b, m, deterministic)
}
func (m *RpcResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RpcResponse.Merge(m, src)
}
func (m *RpcResponse) XXX_Size() int {
	return xxx_messageInfo_RpcResponse.Size(m)
}
func (m *RpcResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_RpcResponse.DiscardUnknown(m)
}

var xxx_messageInfo_RpcResponse proto.InternalMessageInfo

func (m *RpcResponse) GetCode() int32 {
	if m != nil {
		return m.Code
	}
	return 0
}

func (m *RpcResponse) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

func (m *RpcResponse) GetData() string {
	if m != nil {
		return m.Data
	}
	return ""
}

func init() {
	proto.RegisterType((*RpcRequest)(nil), "RpcRequest")
	proto.RegisterMapType((map[string]string)(nil), "RpcRequest.ParamsEntry")
	proto.RegisterType((*StreamRequest)(nil), "StreamRequest")
	proto.RegisterType((*RpcResponse)(nil), "RpcResponse")
}

func init() { proto.RegisterFile("magpie.proto", fileDescriptor_f97d22a07cda9df9) }

var fileDescriptor_f97d22a07cda9df9 = []byte{
	// 241 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x54, 0x90, 0x41, 0x4b, 0xc3, 0x40,
	0x10, 0x85, 0xdd, 0xa6, 0x8d, 0x74, 0x52, 0x45, 0x06, 0xc1, 0xd0, 0x53, 0x89, 0x97, 0x9c, 0xb6,
	0x10, 0x2f, 0xea, 0x51, 0xf0, 0x28, 0xca, 0x7a, 0xf3, 0x36, 0x6d, 0x86, 0x22, 0x36, 0xdd, 0x35,
	0xbb, 0x15, 0xfa, 0x1f, 0xfc, 0xd1, 0xd2, 0x69, 0xd7, 0xa4, 0xb7, 0x37, 0xcc, 0x37, 0x6f, 0x1e,
	0x0f, 0x26, 0x0d, 0xad, 0xdc, 0x27, 0x6b, 0xd7, 0xda, 0x60, 0x8b, 0x5f, 0x05, 0x60, 0xdc, 0xd2,
	0xf0, 0xf7, 0x96, 0x7d, 0xc0, 0x39, 0xa4, 0x8e, 0x5a, 0x6a, 0x7c, 0xae, 0x66, 0x49, 0x99, 0x55,
	0x37, 0xba, 0x5b, 0xea, 0x37, 0xd9, 0x3c, 0x6f, 0x42, 0xbb, 0x33, 0x47, 0x0c, 0x11, 0x86, 0x35,
	0x05, 0xca, 0x07, 0x33, 0x55, 0x8e, 0x8d, 0xe8, 0xe9, 0x03, 0x64, 0x3d, 0x14, 0xaf, 0x20, 0xf9,
	0xe2, 0x5d, 0xae, 0x84, 0xd8, 0x4b, 0xbc, 0x86, 0xd1, 0x0f, 0xad, 0xb7, 0x7c, 0xbc, 0x3a, 0x0c,
	0x8f, 0x83, 0x7b, 0x55, 0xdc, 0xc2, 0xc5, 0x7b, 0x68, 0x99, 0x9a, 0x18, 0x28, 0xfa, 0xab, 0xce,
	0xbf, 0x78, 0x85, 0x4c, 0x52, 0x79, 0x67, 0x37, 0x9e, 0xf7, 0xc8, 0xd2, 0xd6, 0x2c, 0xc8, 0xc8,
	0x88, 0xc6, 0x1c, 0xce, 0x1b, 0xf6, 0x9e, 0x56, 0xf1, 0x47, 0x1c, 0xff, 0x0d, 0x93, 0xce, 0xb0,
	0xaa, 0x20, 0x7d, 0x91, 0x52, 0xb0, 0x84, 0xe1, 0xda, 0x52, 0x8d, 0x97, 0xfa, 0x24, 0xc6, 0x74,
	0xa2, 0x7b, 0x1f, 0x8b, 0xb3, 0x52, 0x3d, 0x65, 0x1f, 0xe3, 0xf9, 0xa1, 0x49, 0xb7, 0x58, 0xa4,
	0x52, 0xe6, 0xdd, 0x5f, 0x00, 0x00, 0x00, 0xff, 0xff, 0xad, 0xff, 0xcb, 0x70, 0x5c, 0x01, 0x00,
	0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// MagpieClient is the client API for Magpie service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type MagpieClient interface {
	Load(ctx context.Context, opts ...grpc.CallOption) (Magpie_LoadClient, error)
}

type magpieClient struct {
	cc *grpc.ClientConn
}

func NewMagpieClient(cc *grpc.ClientConn) MagpieClient {
	return &magpieClient{cc}
}

func (c *magpieClient) Load(ctx context.Context, opts ...grpc.CallOption) (Magpie_LoadClient, error) {
	stream, err := c.cc.NewStream(ctx, &_Magpie_serviceDesc.Streams[0], "/Magpie/load", opts...)
	if err != nil {
		return nil, err
	}
	x := &magpieLoadClient{stream}
	return x, nil
}

type Magpie_LoadClient interface {
	Send(*StreamRequest) error
	CloseAndRecv() (*RpcResponse, error)
	grpc.ClientStream
}

type magpieLoadClient struct {
	grpc.ClientStream
}

func (x *magpieLoadClient) Send(m *StreamRequest) error {
	return x.ClientStream.SendMsg(m)
}

func (x *magpieLoadClient) CloseAndRecv() (*RpcResponse, error) {
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	m := new(RpcResponse)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

// MagpieServer is the server API for Magpie service.
type MagpieServer interface {
	Load(Magpie_LoadServer) error
}

// UnimplementedMagpieServer can be embedded to have forward compatible implementations.
type UnimplementedMagpieServer struct {
}

func (*UnimplementedMagpieServer) Load(srv Magpie_LoadServer) error {
	return status.Errorf(codes.Unimplemented, "method Load not implemented")
}

func RegisterMagpieServer(s *grpc.Server, srv MagpieServer) {
	s.RegisterService(&_Magpie_serviceDesc, srv)
}

func _Magpie_Load_Handler(srv interface{}, stream grpc.ServerStream) error {
	return srv.(MagpieServer).Load(&magpieLoadServer{stream})
}

type Magpie_LoadServer interface {
	SendAndClose(*RpcResponse) error
	Recv() (*StreamRequest, error)
	grpc.ServerStream
}

type magpieLoadServer struct {
	grpc.ServerStream
}

func (x *magpieLoadServer) SendAndClose(m *RpcResponse) error {
	return x.ServerStream.SendMsg(m)
}

func (x *magpieLoadServer) Recv() (*StreamRequest, error) {
	m := new(StreamRequest)
	if err := x.ServerStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

var _Magpie_serviceDesc = grpc.ServiceDesc{
	ServiceName: "Magpie",
	HandlerType: (*MagpieServer)(nil),
	Methods:     []grpc.MethodDesc{},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "load",
			Handler:       _Magpie_Load_Handler,
			ClientStreams: true,
		},
	},
	Metadata: "magpie.proto",
}
